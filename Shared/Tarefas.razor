@*inject HttpClient http *@

<h1>@Titulo</h1>



    <table class="table">
        <thead>
            <tr>
                <th>Acao</th>
                <th>Data</th>
                <th>Descricao</th>
                <th>Concluida</th>
            </tr>
        </thead>
        <tbody>
            @*        @foreach (var item in tarefas)
        {
        <tr>
             vem de tarefa individual 'item event callback no button e inserir parametro da pagina tarefaindividual remover tarefa'
            <Tarefaindividual item="item" RemoverTarefa="RemoveTarefa" />
            </tr>
            } *@
           <Listagenerica ListaItem="tarefas">
               @*não identifica "Tarefa" necessario um ajuste de contexto*@
               <Lista>
                   <Tarefaindividual item="context" RemoverTarefa="RemoveTarefa" />
               </Lista>
           </Listagenerica>

        </tbody>
    </table>
    


    @if (tarefas != null)
    {
        <div class="form-group"></div>
        <label>Tarefa</label>
        <input type="text" placeholder="Informe a tarefa" @bind="novaTarefa" />
        <button class="btn btn-primary btn-sm" @onclick="AdicionarNovaTarefa"> Registrar Tarefa</button>
    }

@code
{
    // pode ser recebidas pelo componente tarefas de qualquer componete
    [Parameter] public List<Tarefa> tarefas { get; set; }
    [Parameter] public string Titulo { get; set; }


    private string novaTarefa = "";
    // referencia n mais necessaria = private List<Tarefa> tarefas = new List<Tarefa>();

    void AdicionarNovaTarefa()
    {
       if (!string.IsNullOrWhiteSpace(novaTarefa))
        {
            tarefas.Add(new Tarefa
            {
                DataCriacao = DateTime.Now,
                Descricao = novaTarefa,
                ID = Guid.NewGuid()
            }); novaTarefa = "";
        }
    }

    /* antigo antes de aplicar o event callback
    
    private void RemoveTarefa(Guid id)
    {
        tarefas.Remove(tarefas.First(x => x.ID == id));
    }
    */
    private void RemoveTarefa(Tarefa tarefa)
        {
        tarefas.Remove(tarefas.First(x => x.ID == tarefa.ID));
        }

}